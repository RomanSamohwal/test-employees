{"version":3,"sources":["reportWebVitals.ts","bll/app-reducer.ts","api/api.ts","bll/users-reducer.ts","bll/store.ts","app/header/Header.tsx","components/button/Bytton.tsx","components/table/Table.tsx","components/input/Input.tsx","features/employees/InputForm.tsx","utils/create-user.ts","features/employees/TableContainer.tsx","features/main/Main.tsx","app/routes/Routes.tsx","app/Basic.tsx","common/progress/Loading.tsx","app/App.tsx","index.tsx","features/employees/Form.module.css","app/header/Header.module.css","features/main/Main.module.css","common/progress/Loading.module.css"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","slice","createSlice","name","initialState","status","error","isInitialized","reducers","setAppErrorAC","state","action","payload","setAppStatusAC","appReducer","reducer","actions","instance","axios","create","baseURL","API","getUsers","a","get","response","data","fetchUsers","createAsyncThunk","param","thunkAPI","dispatch","res","users","message","rejectWithValue","addUser","unshift","user","deleteUser","filter","id","extraReducers","builder","addCase","fulfilled","undefined","push","usersReducer","rootReducer","combineReducers","app","store","configureStore","middleware","getDefaultMiddleware","prepend","thunkMiddleware","Header","React","memo","style","width","AppBar","position","Toolbar","className","navbar","item","Typography","variant","to","PATH","MAIN","activeClassName","active","EMPLOYEES","ButtonComponent","props","Button","onClick","onClickHandler","type","color","title","Table","cursor","map","first_name","last_name","deleteHandler","InputComponent","onChange","value","label","TextField","InputForm","useDispatch","formik","useFormik","initialValues","email","avatar","validate","onSubmit","values","resetForm","console","log","firstName","lastName","uuidv4","handleSubmit","form","formContainer","textField","handleChange","errors","button","message_4","message_3","message_1","message_0","TableContainer","useSelector","deleteUserHandler","useCallback","container","Main","main","Routes","exact","path","render","Basic","Loading","progress","CircularProgress","App","useEffect","ReactDOM","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.1ce86f00.chunk.js","sourcesContent":["import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {createSlice, PayloadAction} from '@reduxjs/toolkit';\r\n\r\nconst slice = createSlice({\r\n    name: 'app',\r\n    initialState: {\r\n        status: 'loading',\r\n        error: null,\r\n        isInitialized: false\r\n    } as InitialStateType,\r\n    reducers: {\r\n        setAppErrorAC(state, action: PayloadAction<{ error: string | null }>) {\r\n            state.error = action.payload.error\r\n        },\r\n        setAppStatusAC(state, action: PayloadAction<{ status: RequestStatusType }>) {\r\n            state.status = action.payload.status\r\n        }\r\n    }\r\n})\r\n\r\nexport const appReducer = slice.reducer\r\nexport const {setAppErrorAC, setAppStatusAC} = slice.actions\r\n\r\nexport type RequestStatusType = 'idle' | 'loading' | 'succeeded' | 'failed'\r\n\r\nexport type InitialStateType = {\r\n    status: RequestStatusType\r\n    error: string | null\r\n}","import axios from 'axios'\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://reqres.in/api/'\r\n})\r\n\r\nexport const API = {\r\n    getUsers: async () => {\r\n        const response = await instance.get<ResponseType>('users?per_page=12');\r\n        return response.data\r\n    }\r\n}\r\n\r\n//types\r\ntype ResponseType = {\r\n    page: number,\r\n    per_page: number,\r\n    total: number,\r\n    total_pages: number,\r\n    data: DataType,\r\n    support: SupportType\r\n}\r\nexport type DataType = Array<UserType>\r\n\r\nexport type UserType = {\r\n    id?: number | string,\r\n    first_name: string,\r\n    last_name: string,\r\n    email?: string,\r\n    avatar?: string\r\n}\r\n\r\ntype SupportType = {\r\n    url: string,\r\n    text: string\r\n}","import {createAsyncThunk, createSlice, PayloadAction} from \"@reduxjs/toolkit\";\r\nimport {setAppErrorAC, setAppStatusAC} from \"./app-reducer\";\r\nimport {API, DataType, UserType} from \"../api/api\";\r\n\r\nexport const fetchUsers = createAsyncThunk(\r\n    'users/fetchUsers',\r\n    async (param, thunkAPI) => {\r\n        try {\r\n            thunkAPI.dispatch(setAppStatusAC({status: 'loading'}))\r\n            const res = await API.getUsers()\r\n            const users = res.data\r\n            thunkAPI.dispatch(setAppStatusAC({status: 'succeeded'}))\r\n            return {users}\r\n        } catch (e) {\r\n            thunkAPI.dispatch(setAppErrorAC({error: e.message}))\r\n            thunkAPI.rejectWithValue(null)\r\n        }\r\n    });\r\n\r\nconst slice = createSlice({\r\n    name: 'users',\r\n    initialState: [] as DataType,\r\n    reducers: {\r\n        addUser(state, action: PayloadAction<{ user:  UserType}>) {\r\n            state.unshift({...action.payload.user})\r\n        },\r\n        deleteUser(state, action: PayloadAction<{id: number}>){\r\n            return state.filter(user => user.id !== action.payload.id)\r\n        }\r\n    },\r\n    extraReducers: (builder) => {\r\n        builder.addCase(fetchUsers.fulfilled, (state, action) => {\r\n            if (action.payload !== undefined) {\r\n                state.push(...action.payload.users)\r\n            }\r\n        })\r\n    }\r\n})\r\n\r\n\r\nexport const usersReducer = slice.reducer\r\nexport const {addUser, deleteUser} = slice.actions\r\n\r\n","import {combineReducers, configureStore} from '@reduxjs/toolkit';\r\nimport thunkMiddleware from 'redux-thunk'\r\nimport {appReducer} from './app-reducer';\r\nimport {usersReducer} from './users-reducer';\r\n\r\nconst rootReducer = combineReducers(\r\n    {\r\n        app: appReducer,\r\n        users: usersReducer\r\n    }\r\n)\r\n\r\nexport const store = configureStore({\r\n    reducer: rootReducer,\r\n    middleware: getDefaultMiddleware => getDefaultMiddleware().prepend(thunkMiddleware)\r\n})\r\n\r\nexport type RootReducerType = typeof rootReducer\r\nexport type AppRootStateType = ReturnType<RootReducerType>","import React from 'react';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport {NavLink} from 'react-router-dom';\r\nimport style from './Header.module.css'\r\n\r\nexport const Header = React.memo(() => {\r\n        return (\r\n            <div style={{width: '100vw'}}>\r\n                <AppBar position=\"static\">\r\n                    <Toolbar className={style.navbar}>\r\n                        <div className={style.item}>\r\n                            <Typography variant=\"h5\">\r\n                                <NavLink to={PATH.MAIN} activeClassName={style.active}>MAIN</NavLink>\r\n                            </Typography>\r\n                        </div>\r\n                        <div className={style.item}>\r\n                            <Typography variant=\"h5\">\r\n                                <NavLink to={PATH.EMPLOYEES} activeClassName={style.active}>EMPLOYEES</NavLink>\r\n                            </Typography>\r\n                        </div>\r\n                    </Toolbar>\r\n                </AppBar>\r\n            </div>\r\n        );\r\n    }\r\n)\r\n\r\nexport const PATH = {\r\n    MAIN: '/main',\r\n    EMPLOYEES: '/employees',\r\n};","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nexport const ButtonComponent = React.memo((props: any) => {\r\n    return <Button\r\n        onClick={props.onClickHandler}\r\n        type={props.type}\r\n        variant='contained'\r\n        color='primary'>\r\n        {props.title}\r\n    </Button>\r\n})","import React from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport {UserType} from '../../api/api';\r\nimport {ButtonComponent} from '../button/Bytton';\r\n\r\nexport const Table = React.memo((props: any) => {\r\n        return <div style={{width: '70vw'}}>\r\n            <table className='table table-striped' style={{cursor: \"pointer\"}}>\r\n                <thead>\r\n                <tr>\r\n                    <th>\r\n                        First Name\r\n                    </th>\r\n                    <th>\r\n                        Last Name\r\n                    </th>\r\n                    <th>Delete user</th>\r\n                </tr>\r\n                </thead>\r\n                <tbody>\r\n                {props.data.map((user: UserType) => (\r\n                    <tr key={user.id}>\r\n                        <td>{user.first_name}</td>\r\n                        <td>{user.last_name}</td>\r\n                        <td>\r\n                            <ButtonComponent\r\n                                onClickHandler={() => props.deleteHandler(user.id)}\r\n                                title={'delete'}/>\r\n                        </td>\r\n                    </tr>\r\n                ))}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    }\r\n)","import React, {ChangeEvent} from 'react'\r\nimport {TextField} from \"@material-ui/core\";\r\n\r\ntype InputPropsType = {\r\n    id: string,\r\n    name: string,\r\n    onChange: {\r\n            (e: ChangeEvent<any>): void; <T_1 = string | ChangeEvent<any>>(field: T_1):\r\n                T_1 extends ChangeEvent<any> ? void : (e: string | ChangeEvent<any>) => void;\r\n              }\r\n    value: string | undefined\r\n    label: string | undefined\r\n    error: string | undefined\r\n}\r\n\r\nexport const InputComponent = React.memo<InputPropsType>(\r\n    ({id,name,onChange,\r\n                 value, error, label}) => {\r\n\r\n        return <TextField id={id} name={name} onChange={onChange}\r\n                          value={value} color='primary'\r\n                          label={!!error ? error : label} variant='outlined'\r\n                          type='text'\r\n                          error={!!error}/>\r\n})","import {useFormik} from 'formik'\r\nimport React from 'react'\r\nimport {ButtonComponent} from '../../components/button/Bytton';\r\nimport {useDispatch} from 'react-redux';\r\nimport {createUser} from '../../utils/create-user';\r\nimport {addUser} from '../../bll/users-reducer';\r\nimport style from './Form.module.css'\r\nimport {UserType} from '../../api/api';\r\nimport {InputComponent} from '../../components/input/Input';\r\n\r\nexport const InputForm = React.memo(() => {\r\n    const dispatch = useDispatch()\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            first_name: '',\r\n            last_name: '',\r\n            email: '',\r\n            avatar: ''\r\n        } as UserType,\r\n        validate: validate,\r\n        onSubmit: (values: UserType, {resetForm}) => {\r\n            console.log(values)\r\n            const user = createUser(values.first_name, values.last_name, values.email, values.avatar)\r\n            dispatch(addUser({user: user}))\r\n            resetForm({values: {first_name: '', last_name: '', email: '', avatar: ''} as UserType})\r\n        }\r\n    })\r\n\r\n    return <form onSubmit={formik.handleSubmit}>\r\n        <div className={style.form}>\r\n            <div className={style.formContainer}>\r\n                <div className={style.textField}>\r\n                    <InputComponent id={'first_name'} name={'first_name'}\r\n                                    value={formik.values.first_name}\r\n                                    onChange={formik.handleChange}\r\n                                    error={formik.errors.first_name} label={'first name'}/>\r\n                </div>\r\n                <div className={style.textField}>\r\n                    <InputComponent id={'last_name'} name={'last_name'}\r\n                                    value={formik.values.last_name}\r\n                                    onChange={formik.handleChange}\r\n                                    error={formik.errors.last_name} label={'last name'}/>\r\n                </div>\r\n            </div>\r\n            <div className={style.formContainer}>\r\n                <div className={style.textField}>\r\n                    <InputComponent id={'email'} name={'email'}\r\n                                    value={formik.values.email}\r\n                                    onChange={formik.handleChange}\r\n                                    error={formik.errors.email} label={'email'}/>\r\n                </div>\r\n                <div className={style.textField}>\r\n                    <InputComponent id={'avatar'} name={'avatar'}\r\n                                    value={formik.values.avatar}\r\n                                    onChange={formik.handleChange}\r\n                                    error={formik.errors.avatar} label={'avatar'}/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div className={style.button}>\r\n            <ButtonComponent type='submit' title={'submit'}/>\r\n        </div>\r\n    </form>\r\n})\r\n\r\nlet validate = (values: UserType) => {\r\n    if (!values.first_name) {\r\n        return {\r\n            first_name: message_0\r\n        }\r\n    }\r\n    if (!values.last_name) {\r\n        return {\r\n            last_name: message_1\r\n        }\r\n    }\r\n\r\n    if (!values.email) {\r\n        return {\r\n            email: message_3\r\n        }\r\n    }\r\n\r\n    if (!values.avatar) {\r\n        return {\r\n            avatar: message_4\r\n        }\r\n    }\r\n}\r\n\r\nconst message_0 = 'first name is required'\r\nconst message_1 = 'last name is required'\r\nconst message_3 = 'email is required'\r\nconst message_4 = 'avatar url required'","import {UserType} from \"../api/api\"\r\nimport {v4 as uuidv4} from 'uuid';\r\n\r\nexport const createUser =\r\n    (firstName: string, lastName: string, email?: string, avatar?: string,): UserType => {\r\n        return {\r\n            id: uuidv4(),\r\n            first_name: firstName,\r\n            last_name: lastName,\r\n            avatar: avatar,\r\n            email: email\r\n        }\r\n    }\r\n\r\n","import React, {useCallback} from 'react';\r\nimport {Table} from '../../components/table/Table';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {AppRootStateType} from '../../bll/store';\r\nimport {deleteUser} from '../../bll/users-reducer';\r\nimport {InputForm} from './InputForm';\r\nimport style from './Form.module.css'\r\n\r\nexport const TableContainer = () => {\r\n    const users = useSelector<AppRootStateType>(state => state.users)\r\n    const dispatch = useDispatch()\r\n\r\n    const deleteUserHandler = useCallback((id: number) => {\r\n        dispatch(deleteUser({id: id}))\r\n    }, [])\r\n\r\n    return <div className={style.container}>\r\n        <InputForm/>\r\n        <Table data={users} deleteHandler={deleteUserHandler}/>\r\n    </div>\r\n}","import React from 'react';\r\nimport style from './Main.module.css'\r\n\r\nexport const Main = React.memo(() => {\r\n    return <div className={style.main}>\r\n        Main\r\n    </div>\r\n})","import React from 'react';\r\nimport {Redirect, Route, Switch} from 'react-router-dom';\r\nimport {PATH} from '../header/Header';\r\nimport {TableContainer} from '../../features/employees/TableContainer';\r\nimport {Main} from '../../features/main/Main';\r\n\r\nexport const Routes = () => {\r\n    return <Switch>\r\n        <Route exact path='/'>\r\n            <Redirect to={PATH.MAIN}/>\r\n        </Route>\r\n        <Route exact path={PATH.MAIN} render={() => <Main/>}/>\r\n        <Route exact path={PATH.EMPLOYEES} render={() => <TableContainer/>}/>\r\n    </Switch>\r\n}","import React from 'react';\r\nimport {Header} from './header/Header';\r\nimport {Routes} from './routes/Routes';\r\n\r\nexport const Basic = () => {\r\n    return <>\r\n        <Header/>\r\n        <Routes/>\r\n    </>\r\n}","import React from 'react';\r\nimport {CircularProgress} from '@material-ui/core';\r\nimport style from './Loading.module.css'\r\n\r\nexport const Loading = () => {\r\n    return <div className={style.progress}>\r\n                <CircularProgress />\r\n        </div>\r\n}","import React, {useEffect} from 'react';\nimport {Basic} from './Basic';\nimport {HashRouter} from 'react-router-dom';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {AppRootStateType} from '../bll/store';\nimport {fetchUsers} from '../bll/users-reducer';\nimport {Loading} from '../common/progress/Loading';\n\nfunction App() {\n\n    const dispatch = useDispatch()\n    const status = useSelector<AppRootStateType>(state => state.app.status)\n\n    useEffect(() => {\n        dispatch(fetchUsers())\n    }, [])\n\n    if (status === 'loading') {\n        return <Loading/>\n    }\n\n    return <>\n        <HashRouter>\n            <Basic/>\n        </HashRouter>\n    </>\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from 'react-redux';\nimport { store } from './bll/store';\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport App from './app/App';\n\nReactDOM.render(\n    <Provider store={store}>\n        <App/>\n    </Provider>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__3p_Uv\",\"formContainer\":\"Form_formContainer__18j2u\",\"textField\":\"Form_textField__2LEDp\",\"button\":\"Form_button__1YHqn\",\"container\":\"Form_container__1XEHo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbar\":\"Header_navbar__296fW\",\"item\":\"Header_item__1z_lv\",\"active\":\"Header_active__xyVce\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Main_main__Mx4gS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"progress\":\"Loading_progress__xUnWT\"};"],"sourceRoot":""}